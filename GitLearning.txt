git init 
# Инициализация нового git-репозитория


git add .
# Индексация (включение в будущий ближайший коммит) всех файлов перед коммитом


git add filename.txt
# Индексация (включение в будущий ближайший коммит) всех файлов перед коммитом


git add .
git reset -- path/file.cpp
# Индексировать все файлы кроме файла "file.cpp", лежащего в "path"


git add .
git reset -- mydir
# Индексировать все файлы кроме файлов, лежащих в "mydir"


git commit -m "Текст коммита"
# Фиксация изменений


git branch
# Список веток


git branch newBranch
# Создаст ветку newBranch


git checkout master
# Выбор существующей ветки master


git checkout -b newBranch
# Две предыдущие команды можно заменить одной такой
# Т.е. будет создана новая ветка и сразу же выбрана


git log
# Список всех выполненных коммитов для текущей ветке
#
# Для прекращения просмотра списка, нажать 'q' (должна быть включена английская раскладка)


git log branchName
# Список всех выполненных коммитов для ветки branchName
#
# Для прекращения просмотра списка, нажать 'q' (должна быть включена английская раскладка)


git log --pretty=oneline
# Вывод информации о коммитах в кратком виде


git push origin master
# Залить изменения на ветку master, сервера origin


git checkout branchOfAdmin
git push origin branchOfAdmin
# Создать ветку branchOfAdmin на удалённом репозитории и сразу же залить изменения из локальной ветки branchOfAdmin.
# Ветка branchOfAdmin должна быть предварительно выбрана.


git remote add origin https://github.com/mouse71rus/GitLearning.git
# Настроить команду push
# Другими словами, указать сервер, куда должны пушиться изменения 


git remote
# Список настроенных удалённых репозиториев (кратко, только имя)


git remote -v
# Список настроенных удалённых репозиториев (подробно, имя и адрес сервера)


git clone https://github.com/mouse71rus/GitLearning.git
# Клонировать репозиторий
# Не нуждается в предварительной команде git init. Сразу git clone


git clone https://github.com/mouse71rus/GitLearning .
# Клонировать репозиторий в текущую папку
# Не нуждается в предварительной команде git init. Сразу git clone
# Точка в конце очень важна


git fetch origin
git checkout -b LocalBranch origin/RemoteBranch 
# Стянуть ещё ветку из удалённого репозитория
# origin - имя сервера
# RemoteBranch - имя ветки на удалённом репозитории
# LocalBranch - имя ветки на локальном репозитории (ветка будет создана)


git checkout master
git merge branchOfAdmin
# Слияние ветки master с веткой branchOfAdmin.
# Ветка master должна быть предварительно выбрана.


git merge --abort
# Отмена слияния


gitk
# Просмотр графа изменений


git tag
# Вывод списка тегов


git tag -a v1.4 -m 'my version 1.4'
# Создать тег (метку) v1.4 для текущего коммита и добавить комментарий "my version 1.4"


git tag v1.6
# Создать легковесный тег (метку) v1.6 для текущего коммита


git tag -a v9.0.0 1cbcb5724 -m "Iterator pattern"
# Добавление нового тега к коммиту 1cbcb5724 с тегом v9.0.0


git show v1.4
# Посмотреть данные тега v1.4 вместе с привязанном к нему коммиту


git push origin v1.5
# Отправить тег v1.5 на удалённый сервер origin
#
# По умолчанию, команда git push не отправляет теги на удалённые сервера. 
# После создания теги нужно отправлять явно на удалённый сервер.


git push origin --tags
# Отправить все теги на удалённый сервер origin


git tag -d v1.4
# Удалить тег v1.4 из локального репозитория


git push origin --delete v1.4
# Удалить тег v1.4 из удалённого репозитория


git checkout v2.0.0
# Перейти к тегу (метке)
# По сути переход помеченному коммиту